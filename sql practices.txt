 
-- Create Departments Table
CREATE TABLE Departments (
   DeptID INT PRIMARY KEY,
   DeptName VARCHAR(50)
);
 
-- Insert Sample Data into Departments
INSERT INTO Departments VALUES
(1, 'Engineering'),
(2, 'HR'),
(3, 'Marketing'),
(4, 'Finance');
 
-- Create Employees Table
CREATE TABLE Employees (
   EmpID INT PRIMARY KEY,
   EmpName VARCHAR(100),
   DeptID INT,
   Salary DECIMAL(10,2),
   FOREIGN KEY (DeptID) REFERENCES Departments(DeptID)
);
 
-- Insert Sample Data into Employees
INSERT INTO Employees VALUES
(101, 'Alice', 1, 70000),
(102, 'Bob', 1, 80000),
(103, 'Charlie', 2, 50000),
(104, 'David', NULL, 60000), -- No department assigned
(105, 'Eve', 3, 55000);
 
-- Create Projects Table
CREATE TABLE Projects (
   ProjectID INT PRIMARY KEY,
   ProjectName VARCHAR(100),
   EmpID INT,
   FOREIGN KEY (EmpID) REFERENCES Employees(EmpID)
);
 
-- Insert Sample Data into Projects
INSERT INTO Projects VALUES
(201, 'AI Research', 101),
(202, 'Cloud Migration', 102),
(203, 'HR Analytics', 103),
(204, 'Marketing Automation', NULL); -- No employee assigned
 
 
 
CREATE TABLE Salaries (
   SalaryID INT PRIMARY KEY,
   EmpID INT,
   Salary DECIMAL(10,2),
   EffectiveDate DATE,
   FOREIGN KEY (EmpID) REFERENCES Employees(EmpID)
);
 
INSERT INTO Salaries VALUES
(1, 101, 65000, '2023-01-01'),
(2, 101, 70000, '2024-01-01'),
(3, 102, 75000, '2023-01-01'),
(4, 102, 80000, '2024-01-01'),
(5, 103, 48000, '2023-01-01'),
(6, 103, 50000, '2024-01-01');
 
-- Managers Table
CREATE TABLE Managers (
   EmpID INT PRIMARY KEY,
   ManagerID INT,
   FOREIGN KEY (EmpID) REFERENCES Employees(EmpID),
   FOREIGN KEY (ManagerID) REFERENCES Employees(EmpID)
);
 
INSERT INTO Managers VALUES
(101, 102), -- Alice reports to Bob
(103, 102), -- Charlie reports to Bob
(104, 101); -- David reports to Alice
 
-- Employee Skills Table
CREATE TABLE EmployeeSkills (
   EmpID INT,
   Skill VARCHAR(50),
   PRIMARY KEY (EmpID, Skill),
   FOREIGN KEY (EmpID) REFERENCES Employees(EmpID)
);
 
INSERT INTO EmployeeSkills VALUES
(101, 'Python'),
(101, 'Machine Learning'),
(102, 'Cloud Computing'),
(102, 'DevOps'),
(103, 'HR Analytics'),
(105, 'Marketing Automation');


select * from Departments;
select * from Employees;
select * from Projects;
select * from Salaries;
select * from Managers;
select * from EmployeeSkills;


1 select E.EmpID,E.EmpName,D.DeptID from Employees E join Departments D on D.DeptID=E.DeptID;
2 select * from Employees E left join Departments D on D.DeptID=E.DeptID;
3 select E.EmpID,E.EmpName,D.DeptID  from Employees E RIGHT JOIN Departments D on D.DeptID=E.DeptID;
4 select E.EmpID , E.EmpName  from Employees E LEFT JOIN Departments D on D.DeptID=E.DeptID
  UNION
  select D.DeptID , D.DeptName  from Employees E RIGHT JOIN Departments D on D.DeptID=E.DeptID;
5 select E.EmpID , E.EmpName  , P.ProjectName from Employees E LEFT JOIN Projects P on P.EmpID=E.EmpID 
6 select E.EmpID , E.EmpName  , P.ProjectName from Employees E LEFT JOIN Projects P on P.EmpID=E.EmpID where P.ProjectName is null;
7 select E.EmpID , E.EmpName from Employees E LEFT JOIN Departments D on D.DeptID=E.DeptID where D.DeptName ='Engineering'
8 select D.* from Employees E Right JOIN Departments D on D.DeptID=E.DeptID where E.EmpID is NULL
9 select D.DeptName,count(E.EmpID) as count
  from Employees E Right JOIN Departments D on D.DeptID=E.DeptID 
  group by DeptName
  order by DeptName
10 select E.* ,D.DeptName, ProjectName
  from  Employees E left JOIN Departments D on D.DeptID=E.DeptID 
  left join Projects P on P.EmpID=E.EmpID
11 select E.*,S.SalaryID,S.effectivedate
    from Employees E
    inner join  Salaries S on E.EmpID=S.EmpID
    where EffectiveDate = (
    select max(EffectiveDate)
    from Salaries where EmpID = E.EmpID
    )
12 select E.EmpID, EmpName
    from Employees E
    inner  join  EmployeeSkills S on E.EmpID=S.EmpID
    group by E.EmpName ,E.EmpID
    having count(s.skill) > 1;
13 select E.EmpID, E.EmpName, Me.EmpName as Manager
    from Employees E
    inner  join Managers M on E.EmpID=M.EmpID
    inner  join Employees Me on Me.EmpID=M.ManagerID











